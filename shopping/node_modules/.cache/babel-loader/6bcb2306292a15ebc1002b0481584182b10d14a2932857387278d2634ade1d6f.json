{"ast":null,"code":"// 购物车\nimport { getCartList } from '@/api/cart.js';\nexport default {\n  namespaced: true,\n  state() {\n    return {\n      cartList: []\n    };\n  },\n  mutations: {\n    // 提供一个 设置 cartList 的mutation\n    setCartList(state, newList) {\n      state.cartList = newList;\n    },\n    toggleCheck(state, goodsId) {\n      // 让 对应的 id 的项 状态取反\n      const goods = state.cartList.find(item => item.goods_id === goodsId);\n      goods.isChecked = !goods.isChecked;\n    }\n  },\n  actions: {\n    // 获取购物车列表\n    async getCartAction(context) {\n      const {\n        data\n      } = await getCartList();\n      // 后台返回的数据中，不包含复选框的选中状态；\n      // 为了实现将来的功能，需要手动维护数据，\n      // 给每一项，添加一个 isChecked 状态（标记当前商品是否选中）\n      data.list.forEach(item => {\n        item.isChecked = true;\n      });\n      context.commit('setCartList', data.list);\n    }\n  },\n  getters: {\n    // 求所有的商品总数\n    cartTotal(state) {\n      return state.cartList.reduce((sum, item) => sum + item.goods_num, 0);\n    },\n    // 选中的商品项\n    selCartList(state) {\n      // 过滤\n      return state.cartList.filter(item => item.isChecked);\n    },\n    // 选中的总数\n    selCount(state, getters) {\n      return getters.selCartList.reduce((sum, item) => sum + item.goods_num, 0);\n    },\n    // 选中的总价\n    selPrice(state, getters) {\n      return getters.selCartList.reduce((sum, item) => {\n        return sum + item.goods_num * item.goods.goods_price_min;\n      }, 0).toFixed(2);\n    },\n    // 是否全选\n    isAllChecked(state) {\n      return state.cartList.every(item => item.isChecked);\n    }\n  }\n};","map":{"version":3,"names":["getCartList","namespaced","state","cartList","mutations","setCartList","newList","toggleCheck","goodsId","goods","find","item","goods_id","isChecked","actions","getCartAction","context","data","list","forEach","commit","getters","cartTotal","reduce","sum","goods_num","selCartList","filter","selCount","selPrice","goods_price_min","toFixed","isAllChecked","every"],"sources":["D:/A/WEB/dark horse/Vue/Vue2.0/demo/shopping/src/store/modules/cart.js"],"sourcesContent":["// 购物车\r\nimport { getCartList } from '@/api/cart.js'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state () {\r\n    return {\r\n      cartList: []\r\n    }\r\n  },\r\n  mutations: {\r\n    // 提供一个 设置 cartList 的mutation\r\n    setCartList (state, newList) {\r\n      state.cartList = newList\r\n    },\r\n    toggleCheck (state, goodsId) {\r\n      // 让 对应的 id 的项 状态取反\r\n      const goods = state.cartList.find(item => item.goods_id === goodsId)\r\n      goods.isChecked = !goods.isChecked\r\n    }\r\n  },\r\n  actions: {\r\n    // 获取购物车列表\r\n    async getCartAction (context) {\r\n      const { data } = await getCartList()\r\n      // 后台返回的数据中，不包含复选框的选中状态；\r\n      // 为了实现将来的功能，需要手动维护数据，\r\n      // 给每一项，添加一个 isChecked 状态（标记当前商品是否选中）\r\n      data.list.forEach(item => {\r\n        item.isChecked = true\r\n      })\r\n      context.commit('setCartList', data.list)\r\n    }\r\n  },\r\n  getters: {\r\n    // 求所有的商品总数\r\n    cartTotal (state) {\r\n      return state.cartList.reduce((sum, item) => sum + item.goods_num, 0)\r\n    },\r\n    // 选中的商品项\r\n    selCartList (state) { // 过滤\r\n      return state.cartList.filter(item => item.isChecked)\r\n    },\r\n    // 选中的总数\r\n    selCount (state, getters) {\r\n      return getters.selCartList.reduce((sum, item) => sum + item.goods_num, 0)\r\n    },\r\n    // 选中的总价\r\n    selPrice (state, getters) {\r\n      return getters.selCartList.reduce((sum, item) => {\r\n        return sum + item.goods_num * item.goods.goods_price_min\r\n      }, 0).toFixed(2)\r\n    },\r\n    // 是否全选\r\n    isAllChecked (state) {\r\n      return state.cartList.every(item => item.isChecked)\r\n    }\r\n\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,eAAe;AAE3C,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAKA,CAAA,EAAI;IACP,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,WAAWA,CAAEH,KAAK,EAAEI,OAAO,EAAE;MAC3BJ,KAAK,CAACC,QAAQ,GAAGG,OAAO;IAC1B,CAAC;IACDC,WAAWA,CAAEL,KAAK,EAAEM,OAAO,EAAE;MAC3B;MACA,MAAMC,KAAK,GAAGP,KAAK,CAACC,QAAQ,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKJ,OAAO,CAAC;MACpEC,KAAK,CAACI,SAAS,GAAG,CAACJ,KAAK,CAACI,SAAS;IACpC;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,aAAaA,CAAEC,OAAO,EAAE;MAC5B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMjB,WAAW,CAAC,CAAC;MACpC;MACA;MACA;MACAiB,IAAI,CAACC,IAAI,CAACC,OAAO,CAACR,IAAI,IAAI;QACxBA,IAAI,CAACE,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC;MACFG,OAAO,CAACI,MAAM,CAAC,aAAa,EAAEH,IAAI,CAACC,IAAI,CAAC;IAC1C;EACF,CAAC;EACDG,OAAO,EAAE;IACP;IACAC,SAASA,CAAEpB,KAAK,EAAE;MAChB,OAAOA,KAAK,CAACC,QAAQ,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEb,IAAI,KAAKa,GAAG,GAAGb,IAAI,CAACc,SAAS,EAAE,CAAC,CAAC;IACtE,CAAC;IACD;IACAC,WAAWA,CAAExB,KAAK,EAAE;MAAE;MACpB,OAAOA,KAAK,CAACC,QAAQ,CAACwB,MAAM,CAAChB,IAAI,IAAIA,IAAI,CAACE,SAAS,CAAC;IACtD,CAAC;IACD;IACAe,QAAQA,CAAE1B,KAAK,EAAEmB,OAAO,EAAE;MACxB,OAAOA,OAAO,CAACK,WAAW,CAACH,MAAM,CAAC,CAACC,GAAG,EAAEb,IAAI,KAAKa,GAAG,GAAGb,IAAI,CAACc,SAAS,EAAE,CAAC,CAAC;IAC3E,CAAC;IACD;IACAI,QAAQA,CAAE3B,KAAK,EAAEmB,OAAO,EAAE;MACxB,OAAOA,OAAO,CAACK,WAAW,CAACH,MAAM,CAAC,CAACC,GAAG,EAAEb,IAAI,KAAK;QAC/C,OAAOa,GAAG,GAAGb,IAAI,CAACc,SAAS,GAAGd,IAAI,CAACF,KAAK,CAACqB,eAAe;MAC1D,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IAClB,CAAC;IACD;IACAC,YAAYA,CAAE9B,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACC,QAAQ,CAAC8B,KAAK,CAACtB,IAAI,IAAIA,IAAI,CAACE,SAAS,CAAC;IACrD;EAEF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}