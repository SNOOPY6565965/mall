{"ast":null,"code":"import { getAddressList } from '@/api/address.js';\nimport { checkOrder } from '@/api/order';\nexport default {\n  name: 'PayPage',\n  data() {\n    return {\n      addressList: [],\n      address: '四川省成都市都江堰市青城山镇东软大道一号'\n    };\n  },\n  computed: {\n    selectedAddress() {\n      // 这里地址管理非主线业务，直接获取第一个项目作为选中的地址\n      return this.addressList[0] || {\n        address_id: '001',\n        name: '小颖',\n        phone: '18069954320'\n      };\n    },\n    // longAddress () {\n    // const region = this.selectedAddress.region\n    // const longAddress = region.province + region.city + region.region + this.selectedAddress.detail\n    // return this.address || longAddress\n    // },\n    mode() {\n      return this.$route.query.mode;\n    },\n    cartIds() {\n      return this.$route.query.cartIds;\n    }\n  },\n  created() {\n    this.getAddressList();\n  },\n  methods: {\n    async getAddressList() {\n      const {\n        data: {\n          list\n        }\n      } = await getAddressList();\n      this.addressList = list;\n    },\n    async getOrderList() {\n      const res = await checkOrder(this.mode, {\n        cartIds: this.cartIds\n      });\n      console.log(res);\n    }\n  }\n};","map":{"version":3,"names":["getAddressList","checkOrder","name","data","addressList","address","computed","selectedAddress","address_id","phone","mode","$route","query","cartIds","created","methods","list","getOrderList","res","console","log"],"sources":["src/views/pay/index.vue"],"sourcesContent":["<!-- 结算支付 - 一级路由 -->\r\n<template>\r\n  <div>\r\n    <van-nav-bar\r\n    title=\"订单结算台\"\r\n    left-arrow\r\n    @click-left=\"$router.push('/shopping')\"\r\n     />\r\n    <img src=\"@/assets/img/货车动.png\" class=\"img1\">\r\n    <div v-if=\"selectedAddress.address_id\" class=\"box1\">\r\n      <p><span>{{ selectedAddress.name }}</span><span>{{ selectedAddress.phone }}</span></p>\r\n      <p class=\"p2\">{{ address }}</p>\r\n    </div>\r\n    <div v-else class=\"box2\">\r\n      <p>请选择配送地址</p>\r\n    </div>\r\n    <van-icon name=\"arrow\"></van-icon>\r\n    <ul>\r\n      <li v-for=\"i in 12\" :key=\"i\"></li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAddressList } from '@/api/address.js'\r\nimport { checkOrder } from '@/api/order'\r\nexport default {\r\n  name: 'PayPage',\r\n  data () {\r\n    return {\r\n      addressList: [],\r\n      address: '四川省成都市都江堰市青城山镇东软大道一号'\r\n    }\r\n  },\r\n  computed: {\r\n    selectedAddress () {\r\n      // 这里地址管理非主线业务，直接获取第一个项目作为选中的地址\r\n      return this.addressList[0] ||\r\n      {\r\n        address_id: '001',\r\n        name: '小颖',\r\n        phone: '18069954320'\r\n      }\r\n    },\r\n    // longAddress () {\r\n    // const region = this.selectedAddress.region\r\n    // const longAddress = region.province + region.city + region.region + this.selectedAddress.detail\r\n    // return this.address || longAddress\r\n    // },\r\n    mode () {\r\n      return this.$route.query.mode\r\n    },\r\n    cartIds () {\r\n      return this.$route.query.cartIds\r\n    }\r\n  },\r\n  created () {\r\n    this.getAddressList()\r\n  },\r\n  methods: {\r\n    async getAddressList () {\r\n      const { data: { list } } = await getAddressList()\r\n      this.addressList = list\r\n    },\r\n    async getOrderList () {\r\n      const res = await checkOrder(this.mode, {\r\n        cartIds: this.cartIds\r\n      })\r\n      console.log(res)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/styles/css/pay.css';\r\n</style>\r\n"],"mappings":"AAwBA,SAAAA,cAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,gBAAA;MACA;MACA,YAAAH,WAAA,OACA;QACAI,UAAA;QACAN,IAAA;QACAO,KAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAF,IAAA;IACA;IACAG,QAAA;MACA,YAAAF,MAAA,CAAAC,KAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAd,cAAA;EACA;EACAe,OAAA;IACA,MAAAf,eAAA;MACA;QAAAG,IAAA;UAAAa;QAAA;MAAA,UAAAhB,cAAA;MACA,KAAAI,WAAA,GAAAY,IAAA;IACA;IACA,MAAAC,aAAA;MACA,MAAAC,GAAA,SAAAjB,UAAA,MAAAS,IAAA;QACAG,OAAA,OAAAA;MACA;MACAM,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}