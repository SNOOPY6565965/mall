{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\n// import request from '@/utils/request.js'\nimport { getPicCode } from '@/api/login.js';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      picCode: '',\n      // 用户输入的图形验证码\n      picKey: '',\n      // 将来请求传递的图形验证码\n      picUrl: '',\n      // 存储请求渲染的图片地址\n      totalSecond: 60,\n      // 总秒数\n      second: 60,\n      // 当前秒数，开定时器 second--\n      timer: null,\n      // 定时器 id\n      iphone: '' // 手机号\n    };\n  },\n  async created() {\n    this.getPicCode();\n  },\n  methods: {\n    // 获取图像验证码\n    async getPicCode() {\n      // const { data: { base64, key } } = await request.get('/captcha/image')\n      const {\n        data: {\n          base64,\n          key\n        }\n      } = await getPicCode();\n      this.picUrl = base64; // 存储地址\n      this.picKey = key; // 存储唯一标识\n    },\n    // 校验 手机号 和 图形验证码 是否合格\n    validFn() {\n      if (this.iphone !== 11) {\n        _Toast('请输入正确的手机号');\n      }\n      if (this.picCode !== this.picKey) {\n        _Toast('图像验证码不正确');\n      }\n    },\n    // 获取短信验证码\n    async getCode() {\n      if (!this.timer && this.second === this.totalSecond) {\n        // 开启倒计时\n        this.timer = setInterval(() => {\n          this.second--;\n          if (this.second <= 0) {\n            // 清除\n            clearInterval(this.timer);\n            this.timer = null; // 重置定时器 id\n            this.second = this.totalSecond;\n          }\n        }, 1000);\n        _Toast('发送成功，请注意查收');\n      }\n    }\n  },\n  // 离开页面，清除定时器\n  destroyed() {\n    clearInterval(this.timer);\n  }\n};","map":{"version":3,"names":["getPicCode","name","data","picCode","picKey","picUrl","totalSecond","second","timer","iphone","created","methods","base64","key","validFn","_Toast","getCode","setInterval","clearInterval","destroyed"],"sources":["src/views/login/index.vue"],"sourcesContent":["<!-- 登录 - 一级路由 -->\r\n<template>\r\n  <div>\r\n    <van-nav-bar\r\n    title=\"会员登录\"\r\n    left-arrow\r\n    @click-left=\"$router.go(-1)\"\r\n    />\r\n    <div class=\"p\">\r\n      <p class=\"p1\">手机号登录</p>\r\n      <p class=\"p2\">未注册的手机号登录后将自动注册</p>\r\n    </div>\r\n    <div class=\"int\">\r\n      <input v-model=\"iphone\" type=\"text\" placeholder=\"请输入手机号码\">\r\n    </div>\r\n    <div class=\"int\">\r\n      <input v-model=\"picCode\" type=\"text\" placeholder=\"请输入图形验证码\">\r\n      <img :src='picUrl' v-if=\"picUrl\" @click=\"getPicCode()\">\r\n    </div>\r\n    <div class=\"int\">\r\n      <input type=\"text\" placeholder=\"请输入短信验证码\">\r\n      <button @click=\"getCode()\" class=\"btn1\">\r\n        {{ second === totalSecond ? '获取验证码' : second + '秒后重新发送' }}\r\n      </button>\r\n    </div>\r\n    <button class=\"btn2\">登录</button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import request from '@/utils/request.js'\r\nimport { getPicCode } from '@/api/login.js'\r\nimport { Toast } from 'vant'\r\nexport default {\r\n  name: 'LoginPage',\r\n  data () {\r\n    return {\r\n      picCode: '', // 用户输入的图形验证码\r\n      picKey: '', // 将来请求传递的图形验证码\r\n      picUrl: '', // 存储请求渲染的图片地址\r\n      totalSecond: 60, // 总秒数\r\n      second: 60, // 当前秒数，开定时器 second--\r\n      timer: null, // 定时器 id\r\n      iphone: '' // 手机号\r\n    }\r\n  },\r\n  async created () {\r\n    this.getPicCode()\r\n  },\r\n  methods: {\r\n    // 获取图像验证码\r\n    async getPicCode () {\r\n      // const { data: { base64, key } } = await request.get('/captcha/image')\r\n      const { data: { base64, key } } = await getPicCode()\r\n      this.picUrl = base64 // 存储地址\r\n      this.picKey = key // 存储唯一标识\r\n    },\r\n    // 校验 手机号 和 图形验证码 是否合格\r\n    validFn () {\r\n      if (this.iphone !== 11) {\r\n        Toast('请输入正确的手机号')\r\n      }\r\n      if (this.picCode !== this.picKey) {\r\n        Toast('图像验证码不正确')\r\n      }\r\n    },\r\n    // 获取短信验证码\r\n    async getCode () {\r\n      if (!this.timer && this.second === this.totalSecond) {\r\n        // 开启倒计时\r\n        this.timer = setInterval(() => {\r\n          this.second--\r\n          if (this.second <= 0) {\r\n            // 清除\r\n            clearInterval(this.timer)\r\n            this.timer = null // 重置定时器 id\r\n            this.second = this.totalSecond\r\n          }\r\n        }, 1000)\r\n        Toast('发送成功，请注意查收')\r\n      }\r\n    }\r\n  },\r\n  // 离开页面，清除定时器\r\n  destroyed () {\r\n    clearInterval(this.timer)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/styles/css/login.css';\r\n</style>\r\n"],"mappings":";;AA+BA;AACA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,MAAA;MAAA;MACAC,MAAA;MAAA;MACAC,WAAA;MAAA;MACAC,MAAA;MAAA;MACAC,KAAA;MAAA;MACAC,MAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAV,UAAA;EACA;EACAW,OAAA;IACA;IACA,MAAAX,WAAA;MACA;MACA;QAAAE,IAAA;UAAAU,MAAA;UAAAC;QAAA;MAAA,UAAAb,UAAA;MACA,KAAAK,MAAA,GAAAO,MAAA;MACA,KAAAR,MAAA,GAAAS,GAAA;IACA;IACA;IACAC,QAAA;MACA,SAAAL,MAAA;QACAM,MAAA;MACA;MACA,SAAAZ,OAAA,UAAAC,MAAA;QACAW,MAAA;MACA;IACA;IACA;IACA,MAAAC,QAAA;MACA,UAAAR,KAAA,SAAAD,MAAA,UAAAD,WAAA;QACA;QACA,KAAAE,KAAA,GAAAS,WAAA;UACA,KAAAV,MAAA;UACA,SAAAA,MAAA;YACA;YACAW,aAAA,MAAAV,KAAA;YACA,KAAAA,KAAA;YACA,KAAAD,MAAA,QAAAD,WAAA;UACA;QACA;QACAS,MAAA;MACA;IACA;EACA;EACA;EACAI,UAAA;IACAD,aAAA,MAAAV,KAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}