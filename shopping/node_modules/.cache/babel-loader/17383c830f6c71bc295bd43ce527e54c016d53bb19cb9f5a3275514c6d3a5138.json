{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport { getAddressList } from '@/api/address.js';\nimport { checkOrder, submitOrder } from '@/api/order.js';\nexport default {\n  name: 'PayPage',\n  data() {\n    return {\n      addressList: [],\n      order: {},\n      personal: {},\n      remark: '' // 备注留言\n    };\n  },\n  computed: {\n    selectedAddress() {\n      // 这里地址管理非主线业务，直接获取第一个项目作为选中的地址\n      return this.addressList[0] || {\n        address_id: '001',\n        name: '用户一',\n        phone: '12345678900'\n        // longAddress: '中国'\n      };\n    },\n    longAddress() {\n      // const region = this.selectedAddress.region\n      // return region.province + region.city + region.region + this.selectedAddress.detail\n      return '中国';\n    },\n    mode() {\n      return this.$route.query.mode;\n    },\n    cartIds() {\n      return this.$route.query.cartIds;\n    },\n    goodsId() {\n      return this.$route.query.goodsId;\n    },\n    goodsSkuId() {\n      return this.$route.query.goodsSkuId;\n    },\n    goodsNum() {\n      return this.$route.query.goodsNum;\n    }\n  },\n  created() {\n    this.getAddressList();\n    this.getOrderList();\n  },\n  methods: {\n    async submitOrder() {\n      if (this.mode === 'cart') {\n        await submitOrder(this.mode, {\n          cartIds: this.cartIds,\n          remark: this.remark\n        });\n      }\n      if (this.mode === 'buyNow') {\n        await submitOrder(this.mode, {\n          goodsId: this.goodsId,\n          goodsSkuId: this.goodsSkuId,\n          goodsNum: this.goodsNum,\n          remark: this.remark\n        });\n      }\n      _Toast('支付成功');\n      this.$router.replace('/order');\n    },\n    async getAddressList() {\n      const {\n        data: {\n          list\n        }\n      } = await getAddressList();\n      this.addressList = list;\n    },\n    async getOrderList() {\n      // 购物车结算\n      if (this.mode === 'cart') {\n        const {\n          data: {\n            order,\n            personal\n          }\n        } = await checkOrder(this.mode, {\n          cartIds: this.cartIds\n        });\n        this.order = order;\n        this.personal = personal;\n      }\n      // 立刻购买结算\n      if (this.mode === 'buyNow') {\n        const {\n          data: {\n            order,\n            personal\n          }\n        } = await checkOrder(this.mode, {\n          goodsId: this.goodsId,\n          goodsSkuId: this.goodsSkuId,\n          goodsNum: this.goodsNum\n        });\n        this.order = order;\n        this.personal = personal;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getAddressList","checkOrder","submitOrder","name","data","addressList","order","personal","remark","computed","selectedAddress","address_id","phone","longAddress","mode","$route","query","cartIds","goodsId","goodsSkuId","goodsNum","created","getOrderList","methods","_Toast","$router","replace","list"],"sources":["src/views/pay/index.vue"],"sourcesContent":["<!-- 结算支付 - 一级路由 -->\r\n<template>\r\n  <div class=\"pay\">\r\n    <div class=\"box\">\r\n      <van-nav-bar\r\n      title=\"订单结算台\"\r\n      left-arrow\r\n      @click-left=\"$router.push('/shopping')\"\r\n      />\r\n      <img src=\"@/assets/img/货车动.png\" class=\"img1\">\r\n      <div v-if=\"selectedAddress.address_id\" class=\"box1\">\r\n        <p><span>{{ selectedAddress.name }}</span><span>{{ selectedAddress.phone }}</span></p>\r\n        <p class=\"p2\">{{ longAddress }}</p>\r\n        <!-- <p class=\"p2\">{{ selectedAddress.address }}</p> -->\r\n      </div>\r\n      <div v-else class=\"box2\">\r\n        <p>请选择配送地址</p>\r\n      </div>\r\n      <van-icon name=\"arrow\" @click=\"$router.push('/address')\"></van-icon>\r\n      <ul>\r\n        <li v-for=\"i in 12\" :key=\"i\"></li>\r\n      </ul>\r\n      <div class=\"goods\" v-for=\"item in order.goodsList\" :key=\"item\">\r\n        <img :src=\"item.goods_image\">\r\n        <p class=\"goods_name\">{{ item.goods_name }}</p>\r\n        <p class=\"goods_detail\">\r\n          <span class=\"goods_total\">&times;{{ item.total_num }}</span>\r\n          <span class=\"goods_price\">￥{{ item.goods_price_min }}</span>\r\n        </p>\r\n      </div>\r\n      <p class=\"totalNum\">共{{ order.orderTotalNum }}件商品，合计：\r\n        <span class=\"totalPrice\">￥{{ order.orderTotalPrice }}</span>\r\n      </p>\r\n      <hr>\r\n      <p class=\"p\">订单总金额：<span class=\"sp1\">￥{{ order.orderTotalPrice }}</span></p>\r\n      <p class=\"p\">优惠券:<span class=\"sp2\">无优惠券可用</span></p>\r\n      <p class=\"p\">配送费用:<span class=\"sp3\">+￥0.00</span></p>\r\n      <p class=\"zf1\">支付方式</p>\r\n      <p class=\"zf2\">\r\n        <van-icon name=\"balance-o\" size=\"20px\" />\r\n        余额支付(可用9999999.99元)\r\n        <van-icon name=\"passed\" size=\"20px\"/>\r\n      </p>\r\n      <textarea\r\n      placeholder=\"选填：卖家留言（50字内）\"\r\n      maxlength=\"50\"\r\n      class=\"text\"\r\n      ></textarea>\r\n    </div>\r\n    <div class=\"footer\">\r\n      <p>实付款:<span>￥{{ order.orderTotalPrice }}</span></p>\r\n      <button class=\"btn\" @click=\"submitOrder()\">提交订单</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAddressList } from '@/api/address.js'\r\nimport { checkOrder, submitOrder } from '@/api/order.js'\r\nimport { Toast } from 'vant'\r\nexport default {\r\n  name: 'PayPage',\r\n  data () {\r\n    return {\r\n      addressList: [],\r\n      order: {},\r\n      personal: {},\r\n      remark: ''// 备注留言\r\n    }\r\n  },\r\n  computed: {\r\n    selectedAddress () {\r\n      // 这里地址管理非主线业务，直接获取第一个项目作为选中的地址\r\n      return this.addressList[0] ||\r\n      {\r\n        address_id: '001',\r\n        name: '用户一',\r\n        phone: '12345678900'\r\n        // longAddress: '中国'\r\n      }\r\n    },\r\n    longAddress () {\r\n      // const region = this.selectedAddress.region\r\n      // return region.province + region.city + region.region + this.selectedAddress.detail\r\n      return '中国'\r\n    },\r\n    mode () {\r\n      return this.$route.query.mode\r\n    },\r\n    cartIds () {\r\n      return this.$route.query.cartIds\r\n    },\r\n    goodsId () {\r\n      return this.$route.query.goodsId\r\n    },\r\n    goodsSkuId () {\r\n      return this.$route.query.goodsSkuId\r\n    },\r\n    goodsNum () {\r\n      return this.$route.query.goodsNum\r\n    }\r\n  },\r\n  created () {\r\n    this.getAddressList()\r\n    this.getOrderList()\r\n  },\r\n  methods: {\r\n    async submitOrder () {\r\n      if (this.mode === 'cart') {\r\n        await submitOrder(this.mode, {\r\n          cartIds: this.cartIds,\r\n          remark: this.remark\r\n        })\r\n      }\r\n      if (this.mode === 'buyNow') {\r\n        await submitOrder(this.mode, {\r\n          goodsId: this.goodsId,\r\n          goodsSkuId: this.goodsSkuId,\r\n          goodsNum: this.goodsNum,\r\n          remark: this.remark\r\n        })\r\n      }\r\n      Toast('支付成功')\r\n      this.$router.replace('/order')\r\n    },\r\n    async getAddressList () {\r\n      const { data: { list } } = await getAddressList()\r\n      this.addressList = list\r\n    },\r\n    async getOrderList () {\r\n      // 购物车结算\r\n      if (this.mode === 'cart') {\r\n        const { data: { order, personal } } = await checkOrder(this.mode, {\r\n          cartIds: this.cartIds\r\n        })\r\n        this.order = order\r\n        this.personal = personal\r\n      }\r\n      // 立刻购买结算\r\n      if (this.mode === 'buyNow') {\r\n        const { data: { order, personal } } = await checkOrder(this.mode, {\r\n          goodsId: this.goodsId,\r\n          goodsSkuId: this.goodsSkuId,\r\n          goodsNum: this.goodsNum\r\n        })\r\n        this.order = order\r\n        this.personal = personal\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/styles/css/pay.css';\r\n</style>\r\n"],"mappings":";;AAyDA,SAAAA,cAAA;AACA,SAAAC,UAAA,EAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,KAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,gBAAA;MACA;MACA,YAAAL,WAAA,OACA;QACAM,UAAA;QACAR,IAAA;QACAS,KAAA;QACA;MACA;IACA;IACAC,YAAA;MACA;MACA;MACA;IACA;IACAC,KAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAF,IAAA;IACA;IACAG,QAAA;MACA,YAAAF,MAAA,CAAAC,KAAA,CAAAC,OAAA;IACA;IACAC,QAAA;MACA,YAAAH,MAAA,CAAAC,KAAA,CAAAE,OAAA;IACA;IACAC,WAAA;MACA,YAAAJ,MAAA,CAAAC,KAAA,CAAAG,UAAA;IACA;IACAC,SAAA;MACA,YAAAL,MAAA,CAAAC,KAAA,CAAAI,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAArB,cAAA;IACA,KAAAsB,YAAA;EACA;EACAC,OAAA;IACA,MAAArB,YAAA;MACA,SAAAY,IAAA;QACA,MAAAZ,WAAA,MAAAY,IAAA;UACAG,OAAA,OAAAA,OAAA;UACAT,MAAA,OAAAA;QACA;MACA;MACA,SAAAM,IAAA;QACA,MAAAZ,WAAA,MAAAY,IAAA;UACAI,OAAA,OAAAA,OAAA;UACAC,UAAA,OAAAA,UAAA;UACAC,QAAA,OAAAA,QAAA;UACAZ,MAAA,OAAAA;QACA;MACA;MACAgB,MAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;IACA;IACA,MAAA1B,eAAA;MACA;QAAAI,IAAA;UAAAuB;QAAA;MAAA,UAAA3B,cAAA;MACA,KAAAK,WAAA,GAAAsB,IAAA;IACA;IACA,MAAAL,aAAA;MACA;MACA,SAAAR,IAAA;QACA;UAAAV,IAAA;YAAAE,KAAA;YAAAC;UAAA;QAAA,UAAAN,UAAA,MAAAa,IAAA;UACAG,OAAA,OAAAA;QACA;QACA,KAAAX,KAAA,GAAAA,KAAA;QACA,KAAAC,QAAA,GAAAA,QAAA;MACA;MACA;MACA,SAAAO,IAAA;QACA;UAAAV,IAAA;YAAAE,KAAA;YAAAC;UAAA;QAAA,UAAAN,UAAA,MAAAa,IAAA;UACAI,OAAA,OAAAA,OAAA;UACAC,UAAA,OAAAA,UAAA;UACAC,QAAA,OAAAA;QACA;QACA,KAAAd,KAAA,GAAAA,KAAA;QACA,KAAAC,QAAA,GAAAA,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}