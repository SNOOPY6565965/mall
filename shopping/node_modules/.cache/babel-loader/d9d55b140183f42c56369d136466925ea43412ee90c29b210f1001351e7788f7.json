{"ast":null,"code":"export default {\n  name: 'CountPage',\n  props: {\n    value: {\n      type: Number,\n      default: 1\n    }\n  },\n  methods: {\n    handleSub() {\n      if (this.value <= 1) {\n        return;\n      }\n      this.$emit('input', this.value - 1);\n    },\n    handleAdd() {\n      this.$emit('input', this.value + 1);\n    },\n    handleChange(e) {\n      const num = +e.target.value;\n      if (isNaN(num) || num < 1) {\n        e.target.value = this.value;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","value","type","Number","default","methods","handleSub","$emit","handleAdd","handleChange","e","num","target","isNaN"],"sources":["src/components/CountBox.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"handleSub()\" class=\"count-btn1\">-</button>\r\n    <input type=\"number\" @change=\"handleChange()\" :value=\"value\" class=\"int\">\r\n    <button @click=\"handleAdd()\" class=\"count-btn2\">+</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CountPage',\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 1\r\n    }\r\n  },\r\n  methods: {\r\n    handleSub () {\r\n      if (this.value <= 1) {\r\n        return\r\n      }\r\n      this.$emit('input', this.value - 1)\r\n    },\r\n    handleAdd () {\r\n      this.$emit('input', this.value + 1)\r\n    },\r\n    handleChange (e) {\r\n      const num = +e.target.value\r\n      if (isNaN(num) || num < 1) {\r\n        e.target.value = this.value\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import '@/styles/css/countBox.css';\r\n</style>\r\n"],"mappings":"AASA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,SAAAL,KAAA;QACA;MACA;MACA,KAAAM,KAAA,eAAAN,KAAA;IACA;IACAO,UAAA;MACA,KAAAD,KAAA,eAAAN,KAAA;IACA;IACAQ,aAAAC,CAAA;MACA,MAAAC,GAAA,IAAAD,CAAA,CAAAE,MAAA,CAAAX,KAAA;MACA,IAAAY,KAAA,CAAAF,GAAA,KAAAA,GAAA;QACAD,CAAA,CAAAE,MAAA,CAAAX,KAAA,QAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}